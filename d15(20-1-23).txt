/*
Given a string s , return true if the s can be palindrome after deleting at most one character
from it.

Example 1:
Input: s = "aba"
Output: true

Example 2:
Input: s = "abca"
Output: true
Explanation: You could delete the character 'c'.

Example 3:
Input: s = "abc"
Output: false


Test cases:
case=1
input=
aba
output=
true
case=2
input=
abca
output=
true
case=1
input=
abc
output=
false

*/
import java.util.*;
class Test{
    public static boolean valid(String s){
        int n=s.length();
        int i=0,j=s.length()-1;
        while(i<j-1){
           if(s.charAt(i)!=s.charAt(j)){
               if(isValid(s,i,j-1)){
                   return true;
               }
               if(isValid(s,i+1,j)){
                   return true;
               }
               return false;
           }
           else{
               i++;
               j--;
           }
        }
        return true;
    }
    private static boolean isValid(String s,int start,int end){
        while(start<end){
            if(s.charAt(start)!=s.charAt(end)){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        System.out.println(valid(s));
    }
}

output is working but testcase 66.67/100






/*
Given a positive integer, check whether it has alternating bits: namely, 
if two adjacent bits will always have different values.

Example 1:
Input: n = 5
Output: true
Explanation: The binary representation of 5 is: 101

Example 2:
Input: n = 7
Output: false
Explanation: The binary representation of 7 is: 111.

Example 3:
Input: n = 11
Output: false
Explanation: The binary representation of 11 is: 1011.

Example 4:
Input: n = 10
Output: true
Explanation: The binary representation of 10 is: 1010.

Example 5:
Input: n = 3
Output: false

case=1
input=
7
output=
false

case=2
input=
5
output=
true

case=3
input=
10
output=
true

case=4
input=
11
output=
false


case=5
input=
3
output=
false


*/
import java.util.*;
class Test{
    public static boolean Binary(int n){
        String s=Integer.toBinaryString(n);
        for(int i=0;i<s.length()-1;i++){
            if(s.charAt(i)==s.charAt(i+1)){
                return false;
            }
        }
        return true;
    }
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.println(Binary(n));
    }
}



