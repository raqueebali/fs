/*

There is a robot starting at the position (0, 0) , the origin, on a 2D plane. Given a sequence of its moves, judge
if this robot ends up at (0, 0) after it completes its moves.
You are given a string moves that represents the move sequence of the robot where moves[i] represents its
i move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).
Return true if the robot returns to the origin after it finishes all of its moves, or false otherwise.
Note: The way that the robot is "facing" is irrelevant. 'R' will always make the robot move to the right once,
'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same
for each move.

Example 1:
Input: moves = "UD"
Output: true

Explanation: The robot moves up once, and then down once. All moves have the same magnitude,
so it ended up at the origin where it started. Therefore, we return true.

Example 2:
Input: moves = "LL"
Output: false

Explanation: The robot moves left twice. It ends up two "moves" to the left of the origin. We
return false because it is not at the origin at the end of its moves.



case=1
input=
UD
output=
true

case=2
input=
LL
output=
false
case=3
input=
RRDD
output=
false
case=4
input=
LDRRLRUULR
output=
false

*/
import java.util.*;
class Test{
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        String s=sc.next();
        int x=0,y=0;
        for(int i=0;i<s.length();i++){
            if(s.charAt(i)=='U'){
                x-=1;
            }
            if(s.charAt(i)=='D'){
                x+=1;
            }
            if(s.charAt(i)=='R'){
                y+=1;
            }
            if(s.charAt(i)=='L'){
                y-=1;
            }
        }
        if(x==0 &&y==0){
            System.out.println("true");
        }
        else{
            System.out.println("false");
        }
    }
}




/*
Given the array nums consisting of 2n elements in the form [x ,x ,...,x ,y ,y ,...,y ] .
Return the array in the form [x ,y ,x ,y ,...,x ,y ] .

Example 1:
Input: nums = [2,5,1,3,4,7], n = 3
Output: [2,3,5,4,1,7]
Explanation: Since x =2, x =5, x =1, y =3, y =4, y =7 then the answer is [2,3,5,4,1,7].

Example 2:
Input: nums = [1,2,3,4,4,3,2,1], n = 4
Output: [1,4,2,3,3,2,4,1]

Example 3:
Input: nums = [1,1,2,2], n = 2
Output: [1,2,1,2]

case=1
input=
array size
6
enter array elements
2 5 1 3 4 7
output=
2
3
5
4
1
7
case=2
input=
array size
8
enter array elements
1 2 3 4 4 3 2 1 
output=
1
4
2
3
3 
2
4
1

case=3
input=
array size
4
enter array elements
1 1 2 2 
output=
1
2
1
2 




*/
import java.util.*;
class Test{
   
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        System.out.println("array size");
        int n=sc.nextInt();
        int arr[]=new int[n];
        System.out.println("enter array elements");
        int x=n/2,k=0;
        for(int i=0;i<x;i++){
            arr[k]=sc.nextInt();
            k+=2;
        }
        k=1;
        for(int i=0;i<x;i++){
            arr[k]=sc.nextInt();
            k+=2;
        }
        
        for(int j=0;j<n;j++)
            System.out.println(arr[j]);
    }
}

(2-2-23)
/*write a java program for print the below pattern

input=
5

output=
             1
           1   1
         1   2   1
       1   3   3   1
     1   4   6   4   1

*/
import java.util.*;
class Test{
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        for(int i=0;i<n;i++){
            int num=1;
            for(int k=n;k>i;k--){
                System.out.print(" ");
            }
            for(int j=0;j<=i;j++){
                System.out.print(num+" ");
                num=num*(i-j)/(j+1);
            }
            System.out.println();
        }
        
    }
}

