/*
Given an integer array nums , 
find three numbers whose product is maximum and return the maximum product.

Example 1:
Input: nums = [1,2,3]
Output: 6
Example 2:
Input: nums = [1,2,3,4]
Output: 24
Example 3:
Input: nums = [-1,-2,-3]
Output: -6


case=1
input=
3
1 2 3
output=
6
case=2
input=
4
1 2 3 4
output=
24
case=3
input=
3
-1 -2 -3
output=
-6


case=4
input=
5
1 2 3 4 5
output=
60


case=5
input=
5
-100 -99 3 4 5
output=
49500
*/
import java.util.*;
class Test{
    public int maxprod(int arr[],int n){
        int len=arr.length;
        int max=0;
        for(int i=0;i<=n;i++){
            int temp=0;
            // for(int j=0;j<=i;j++){
            //     if(arr[i]>=temp){
            //         temp=arr[j];
            //         arr[j]=arr[i];
            //         arr[i]=temp;
                    
            //     }
            //     //return temp;
            // }
            if(n<0){
                max=Math.max(arr[0]*arr[1]*arr[n-1],arr[n-1]*arr[n-2]*arr[n-3]);
     //           max++;
            }
        }
        return Math.max((arr[0]*arr[1]*arr[n-1]),(arr[n-1]*arr[n-2]*arr[n-3]));
    }
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        System.out.println(new Test().maxprod(arr,n));
    }
}








/*
You are given a list of integers List[] of size N.
Your task is find a position p(0<=p<=N-1) in the List[], such that the addition of all integers to the left of p should be exactly equal to addition of all the integers to the right of p.
If all the integers are at one end of p ,assume the sum of other end is 0.
If there exist more than one answer , then return the leftmost p value.
if p doesn't exist, return -1.
    
Input Format:
-------------
Line-1: An integer N represents size of the list.
Line-2: N space separated integers, List[]
   
Output Format:
---------------
Print an integer result.
  
  
Sample Input-1:
---------------
5
10 2 3 4 3

Sample Output-1:
----------------
1

Explanation:
------------
p=1.
Left of p=10
Right of p=3+4+3=10.
  
  
Sample Input-2:
---------------
4
1 2 2 4

   
Sample Output-2:
----------------
-1


Test cases:
case=1
input=
6
1 7 3 6 5 6
output=
3

case=2
input=
3
1 2 3
output=
-1

case=3
input=
3
2 1 -1
output=
0

    
*/
import java.util.*;
class Test{
    public int pivot(int[]arr){
        int sum=0;
        for(int num:arr){
            sum=sum+num;
        }
        int start=0,index=0;
        for(index=0;index<arr.length;index++){
            sum-=arr[index];
            if(start==sum){
                return index;
            }
            start+=arr[index];
        }
        return -1;
    }
    public static void main(String[]args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[]arr=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        System.out.println(new Test().pivot(arr));
    }
}



